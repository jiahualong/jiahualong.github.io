<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F05%2F01%2Fclojure%2Fclojure-start%2F</url>
    <content type="text"><![CDATA[title: Clojure Startdate: 2019-05-01 22:06:00tags: - clojure categories: - clojure install Clojure REPL (Read Evan Print Loop)install leiningenbrew install lein 创建项目lein new helloworld cd helloworld 进入 repllein repl 测试(+ 1 1) 退出(quit) 字面值=&gt; 42 42 =&gt; 12.1 12.1 =&gt; 1/3 1/3 =&gt;4.0/2 =&gt; (/ 1 3) 1/3 =&gt; (/ 1 3.0) 0.333333333 文本&quot;jam&quot; 关键字:jam 字符\j booleantrue false nullnil]]></content>
  </entry>
  <entry>
    <title><![CDATA[ubuntu apt Cookie]]></title>
    <url>%2F2019%2F04%2F30%2Fubuntu%2Fubuntu-apt%2F</url>
    <content type="text"><![CDATA[apt cache tmp file location/var/cache/apt/archives/ clean tmp fileapt clean apt autoclean apt autoremove apt 走 socks*12apt install tsocksvi /etc/tsocks.conf 123456local = 192.168.1.0/255.255.255.0 local = 127.0.0.0/255.0.0.0server = 0.0.0.0 #socks IPserver_type = 5 #socks versionserver_port = 24 ＃socks port 1tsocks apt install xxxx ref]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>apt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Install Docker in Ubuntu 18.04]]></title>
    <url>%2F2019%2F04%2F27%2Fdocker%2Fdocker-ubuntu18%2F</url>
    <content type="text"><![CDATA[uninstall old versionsudo apt-get remove docker docker-engine docker.io containerd runc update respsudo apt-get update sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ gnupg-agent \ software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \ "deb [arch=amd64] https://download.docker.com/linux/ubuntu \ $(lsb_release -cs) \ stable" #-or- sudo add-apt-repository \ "deb [arch=amd64] https://download.docker.com/linux/ubuntu \ bionic \ stable" sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io refGet Docker CE for Ubuntu]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ssh-keygen Cookie]]></title>
    <url>%2F2019%2F04%2F27%2Fcoreutil%2Fssh-keygen%2F</url>
    <content type="text"><![CDATA[gen 4096 bit RSA Key1ssh-keygen -b 4096 gen 256 bit ECDSA Key1ssh-keygen -t ed25519 args-f 指定名字 -C 添加备注 copy id1ssh-copy-id -i ~/.ssh/my.pub -p 21 username@remote-server args note -i 指定证书文件，默认为~/.ssh/id_rsa.pub -p 指定remote server ssh port username@ 指定用户 默认为当前操作用户 手工| dir | mod || ~/.ssh | 700 || id | 600 || id.pub | 600 || authorized_keys | 600 |]]></content>
      <categories>
        <category>coreutil</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>coreutil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu nmcli]]></title>
    <url>%2F2019%2F04%2F26%2Fubuntu%2Fubuntu-nmcli%2F</url>
    <content type="text"><![CDATA[nmcli WIFI Configre 显示wifi接口12345nmcli d DEVICE TYPE STATE CONNECTION...wlan0 wifi disconnected -- set wifi on1nmcli r wifi on 显示wili列表12345nmcli d wifi list* SSID MODE CHAN RATE SIGNAL BARS SECURITY ... my_wifi Infra 5 54 Mbit/s 89 ▂▄▆█ WPA2 连接wifi1nmcli d wifi connect my_wifi password &lt;password&gt; 参考 1 2]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>coreutil</tag>
        <tag>nmcli</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Intellij IDEA Cookies]]></title>
    <url>%2F2019%2F04%2F26%2Fidea%2Fidea-cookie%2F</url>
    <content type="text"><![CDATA[Intellij IDEA Gen serialVersionUIDcmd+, -&gt; Preferences -&gt; Editor -&gt; Inspections -&gt; Serialization issues -&gt; [checked]Serializable class without ‘serialVersionUID’ implements Serializable 后 Option + Enter 选 Add serialVersionUID field]]></content>
      <categories>
        <category>idea</category>
      </categories>
      <tags>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Apache Commons-Text]]></title>
    <url>%2F2019%2F04%2F26%2Fjava%2Fapache-commons-text%2F</url>
    <content type="text"><![CDATA[Apache Commons-Text包用于进行 HTML XML CSV JSON 字符处理的 StringEscapeUtils现已放入Commons-Text包 12345&lt;dependency&gt; &lt;groupId&gt;org.apache.commons&lt;/groupId&gt; &lt;artifactId&gt;commons-text&lt;/artifactId&gt; &lt;version&gt;1.6&lt;/version&gt;&lt;/dependency&gt;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>apache</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java Regex Cookie]]></title>
    <url>%2F2019%2F04%2F26%2Fjava%2Fjava-regex%2F</url>
    <content type="text"><![CDATA[移除非a-zA-Z0-9空格-号以外的字符123jshell&gt; &quot;Hello - World !&quot;.replaceAll(&quot;[^a-zA-Z0-9 -]&quot;, &quot;&quot;); ...&gt;$1 ==&gt; &quot;Hello - World &quot;]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Gremlin Tutorial]]></title>
    <url>%2F2019%2F04%2F25%2Fgraphdbms%2Fgremlin%2F</url>
    <content type="text"><![CDATA[Gremlin是Apache TinkerPop开发的图遍历语言和虚拟机。适用于基于OLTP的图数据库以及基于OLAP的图处理器。1 Neo4j 与 OrientDB 均支持Gremlin,完整列表参见 Microsfot的spring-data-gremlin Gremlin官方 DB-Engines Ranking of Graph DBMS]]></content>
      <categories>
        <category>GraphDBMS</category>
      </categories>
      <tags>
        <tag>GraphDBMS</tag>
        <tag>gremlin</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Awk Cookie]]></title>
    <url>%2F2019%2F04%2F24%2Fcoreutil%2Fawk%2F</url>
    <content type="text"><![CDATA[awk FS 分割符表达在java中使用\u0001打印的分割符号1awk -F "\x01" vim中 0x1c 会显示为亮 ^\ 这个符号是ASCII FS 0x1c 28 FILE SEPARATOR (IS4)1awk -F "\0x1c" 如果分隔符号是 |0x1c awk中使用1awk -F "\\|\0x1c" 使用,或;分割1awk -F ",|;"]]></content>
      <categories>
        <category>coreutil</category>
      </categories>
      <tags>
        <tag>awk</tag>
        <tag>coreutil</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[History Cookie]]></title>
    <url>%2F2019%2F04%2F24%2Fcoreutil%2Fhistory%2F</url>
    <content type="text"><![CDATA[清理history1history -c]]></content>
      <categories>
        <category>coreutil</category>
      </categories>
      <tags>
        <tag>coreutil</tag>
        <tag>history</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu Mirror]]></title>
    <url>%2F2019%2F04%2F24%2Fubuntu%2Fubuntu-mirror%2F</url>
    <content type="text"><![CDATA[Ubuntu mirror address name url 163 http://mirrors.163.com/ubuntu/ 清华大学开源软件镜像站 https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ 中科大镜像源 https://mirrors.ustc.edu.cn/ubuntu/ 北京交通大学 https://mirror.bjtu.edu.cn/ubuntu/ 官方 http://archive.ubuntu.com/ubuntu 18.04 tsinghua12345678910cat /etc/apt/sources.list.d/official-package-repositories.list deb http://packages.linuxmint.com sonya main upstream import backportdeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial main restricted universe multiversedeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-updates main restricted universe multiversedeb http://mirrors.tuna.tsinghua.edu.cn/ubuntu xenial-backports main restricted universe multiversedeb http://security.ubuntu.com/ubuntu/ xenial-security main restricted universe multiversedeb http://archive.canonical.com/ubuntu/ xenial partner 18.04 docker123cat additional-repositories.listdeb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu Server apt 安装 sshd]]></title>
    <url>%2F2019%2F04%2F23%2Fubuntu%2Fubuntu-sshd%2F</url>
    <content type="text"><![CDATA[apt install openssh server1sudo apt install openssh-server start ssh server1service ssh start]]></content>
      <categories>
        <category>ubuntu</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Install Neo4j With Docker]]></title>
    <url>%2F2019%2F04%2F22%2Fdocker%2Fdocker-neo4j%2F</url>
    <content type="text"><![CDATA[使用Docker安装Neo4j1234567docker run \ --detach \ --publish=7474:7474 --publish=7687:7687 \ --volume=$HOME/neo4j/data:/data \ --volume=$HOME/neo4j/logs:/logs \ --env=NEO4J_dbms_memory_pagecache_size=4G \ neo4j:3.5 web界面http://localhost:7474/browser/ neo4j/neo4` Neo4j Movies Example with Spring Data Neo4jhttps://github.com/neo4j-examples/movies-java-spring-data-neo4j Neo4j Client下载Neo4j-Client 1brew install cleishm/neo4j/neo4j-client neo4j-client -u neo4j localhost]]></content>
      <categories>
        <category>neo4j</category>
      </categories>
      <tags>
        <tag>neo4j</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[spring-boot-starter-data-neo4j 在OpenJDK8出现No class information found in OGM meta-data for class]]></title>
    <url>%2F2019%2F04%2F22%2Fgraphdbms%2Fneo4j-no-class-found-in-ogm%2F</url>
    <content type="text"><![CDATA[现象在OpenJDK 1.8中使用java -jar sdn5-movies-0.0.1-SNAPSHOT.jar 时出现 No class information found in OGM meta-data for classmovies.spring.data.neo4j.domain.Person` 错误. 添加mvn配置12345&lt;dependency&gt; &lt;groupId&gt;io.github.lukehutch&lt;/groupId&gt; &lt;artifactId&gt;fast-classpath-scanner&lt;/artifactId&gt; &lt;version&gt;3.1.13&lt;/version&gt;&lt;/dependency&gt; 参考issuse 604]]></content>
      <categories>
        <category>GraphDBMS</category>
      </categories>
      <tags>
        <tag>neo4j</tag>
        <tag>SpringBoot</tag>
        <tag>GraphDBMS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LogStash Note]]></title>
    <url>%2F2019%2F04%2F21%2Felk%2FLogStash-Note%2F</url>
    <content type="text"><![CDATA[将logs目录下的所有log文件发送至Kafka 环境信息 logstash version 6.0.1 kafka 192.168.1.2:9002 kafka topic myapplog log目录 /MyApp/logs/ logstash config12345678910111213input &#123; file &#123; path =&gt; &quot;/MyApp/logs/*.log&quot; start_position =&gt; &quot;beginning&quot; &#125;&#125;output &#123; kafka &#123; bootstrap_servers =&gt; &quot;192.168.1.2:9092&quot; topic_id =&gt; &quot;myapplog&quot; compression_type =&gt; &quot;gzip&quot; # string (optional)， one of [&quot;none&quot;， &quot;gzip&quot;， &quot;snappy&quot;]， default: &quot;none&quot; &#125;&#125; 运行logstash1logstash -f apiweblogstash.conf 测试监听myapplog主题并查看消息 1kafkacat -C -b 192.168.1.2:9092 -t myapplog]]></content>
      <categories>
        <category>elk</category>
      </categories>
      <tags>
        <tag>logstash</tag>
        <tag>elk</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mac mini 换SSD硬盘]]></title>
    <url>%2F2019%2F04%2F21%2Fmac%2Fmac-mini%E6%8D%A2SSD%E7%A1%AC%E7%9B%98%2F</url>
    <content type="text"><![CDATA[为Mac提速，打算再战两年，于是给Mac mini换了新的SSD ,之前那块500GB硬盘放到了第二个SATA槽中用来放文件仓库，第一块SSD主要用来放系统，常用应用，已获得更高速度。 数据备份换SSD之前先插上一个USB硬盘，使用Time Machine做个备份 这样的话，在换好SSD后开机按Option键，可以选择使用Time Machine备份恢复系统 SSD硬盘的选择我用的是PLEXTOR PX-128M5Pro 这个牌子和其它牌子比起来有独家的True Speed技术，读写速度不会随着盘的使用量增加而减慢 这个牌子和普通和Pro的区别，128的写入速度快了1/3，质保从3年延长至5年, Pro是7mm超薄的，还送一个3.5mm支架 2013年12月30日 PLEXTOR更新了固件至1.6 买后记得更新下 仓位名称不用关心是2012还是2013前半年，直接去｛系统系统｝查看SATA/SATA Express中现在用的仓位就好了 硬盘如果只是由机械硬盘换SSD而不上第二块的话，只拆开一点就行了， 如果是换了SSD后还要将原来的硬盘放到第二个槽挂两块硬盘的话，要买第二个槽的SATA线，同时最好把机器全拆开上 硬盘线大约50-100元，一般还送螺丝刀，螺丝，塑料垫 SSD速度测试使用Disk Speed Test测试，SSD达到了他盒子上标的速度 (Disk Speed Test 在App Store可以免费下载) 个人感觉: 过程不难，但要细心，我用了2个小时才上好2个硬盘，Time Machine恢复系统后花了1个多小时。 换了SSD以后启动速度变快好多，现在点应用图标没有了以前的卡顿的感觉。 Time Machine 是个好软件，用好的话很方便。 参考 优酷视频: OWC 介绍 2012 Mac mini 添加第二块硬盘 拒绝误导：10分钟快速解决Mac Mini更换SSD问题 如何给MAC MINI 2012加装SSD Plextor M5S 256GB SSD ＋ Mac mini SSD換裝筆記 mac mini 2012版更换ssd，使用Time Machine恢复重装系 淘宝青州小熊-苹果apple 功能同ifixit mac mini 第二双硬盘线套件 dual disk]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>mac mini</tag>
        <tag>SSD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MacOS 创建 PlayStation4 安装U盘]]></title>
    <url>%2F2019%2F04%2F19%2Fmac%2Fmac-ps4-install-usb-stock%2F</url>
    <content type="text"><![CDATA[本文将在Mac上制作PlayStation4系统安装U盘, 需要U盘空间大于1.1G。在制作过程中将格式化U盘，请自行备份U盘文件 Setup1 获取PlayStation4新安装文件从PlayStationHK下载更新文件 分为标准更新、新安装两种，本次我们将使用U盘安装全新的PlayStation系统，因此采用新安装文件。 wget http://dsa01.ps4.update.playstation.net/update/ps4/image/2019_0319/rec_7bd82d7957611fe9bca3fa63b78c82c5/PS4UPDATE.PUP Setup2 格式化U盘 将U盘格式化为ExtFAT文件格式，因为PlayStation4 支持这种格式 接入U盘之前查看目前硬盘列表 diskutil list 将U盘接入Mac后再次查看硬盘列表 diskutil list 对比多出的即为U盘 本例中为 `/dev/disk2` 卸载disk2 diskutil unmountDisk disk2 将/dev/disk2 格式化为ExtFAT 文件系统，并使用MBR格式的硬盘分区表, 格式化后的U盘名字为PS4Install diskutil eraseDisk ExFAT PS4Install MBR /dev/disk2 Setup3 拷贝PlayStation4 系统文件在U盘根目录创建PS4文件夹，在PS4文件夹中创建UPDATE文件夹 -or- 使用命令创建: mkdir -p /Volumes/PS4Install/PS4/UPDATE 将下载好的 PS4UPDATE.PUP 拷贝至刚创建完的UPDATE目录中即可. 至此启动盘制作结束。]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>macOS</tag>
        <tag>PlayStation</tag>
        <tag>安装U盘</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MacOS diskutil command tool]]></title>
    <url>%2F2019%2F04%2F18%2Fmac%2Fmac-diskutil%2F</url>
    <content type="text"><![CDATA[查看硬盘列表diskutil list /dev/disk2 : deviceNode TYPE : File System NAME : diskName diskutil若干需要sudo权限 卸载disk2diskutil unmountDisk disk2 eraseDisk之前需要选unmountDisk 格式化 eraseDisk 子命令diskutil eraseDisk FILE_SYSTEM DISK_NAME [APM[Format]|MBR[Format]|GPT[Format]] MountPoint|DiskIdentifier|DeviceNode 将/dev/disk2 格式化为JHFS+ 的几种写法示例: diskutil eraseDisk JHFS+ TestDisk /dev/disk2 diskutil eraseDisk JHFS+ TestDisk disk2 diskutil eraseDisk JHFS+ TestDisk disk2 #1 diskutil eraseDisk JHFS+ TestDisk /dev/disk2s1 将 /dev/disk2 格式化为 ExFAT 并分别使用MBR GPT分区表的几种写法示例: diskutil eraseDisk ExFAT TestDisk /dev/disk2 diskutil eraseDisk ExFAT TestDisk MBRFormat /dev/disk2 diskutil eraseDisk ExFAT TestDisk GPT /dev/disk2 File System - - JHFS+ Mac OS Extended Journaled HFS + Mac OS Extended ExFAT Windows FAT32 Windows 分区表格式 - - APM Apple Partition Map GPT UEFI-style GUID Partition Table MBR MS-DOS Master Boot Record 格式化将disk2分成一个分区: diskutil partitionDisk disk2 1 \ JHFS+ one R 将disk2分成2个分区,第2分区为JHFS+格式250G大小, 第1分区为JHFS+格式并使用硬盘剩余大小 diskutil partitionDisk disk3 2 GPT \ JHFS+ one R \ JHFS+ two 250G 将disk2分成3个分区, 第三分区10G ExFAT格式, 第二分区 250G JHFS+格式， 第一分区使用剩余空间 JHFS+格式 diskutil partitionDisk disk3 MBR \ JHFS+ one R \ JHFS+ two 250G \ ExFAT three 10G 硬盘空间单位可选:B, K, M, G, T, P, % , R(剩余) 删除 disk2的APFS 容器diskutil apfs deleteContainer /dev/disk2 ref: https://tobywf.com/2017/01/diskutil/]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>macOS</tag>
        <tag>diskutil</tag>
        <tag>command Tools</tag>
      </tags>
  </entry>
</search>
